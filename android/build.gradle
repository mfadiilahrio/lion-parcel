apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

apply from: "${rootProject.projectDir}/flavors.gradle"

def envPropertiesFile = rootProject.file("env.properties")
def envProperties = new Properties()

envProperties.load(new FileInputStream(envPropertiesFile))

android {
    with flavorConfig

    compileSdkVersion project.compile_sdk_version
    buildToolsVersion project.build_tools_version

    signingConfigs {
        release {
            storeFile file(envProperties['STORE_PATH'])
            storePassword envProperties['STORE_PASSWORD']
            keyAlias = envProperties['KEYSTORE_ALIAS']
            keyPassword envProperties['KEYSTORE_PASSWORD']
        }
    }

    defaultConfig {
        resConfigs 'en', 'id'
        vectorDrawables.useSupportLibrary = true
        applicationId "com.rio.commerce.android.app"
        minSdkVersion project.min_sdk_version
        targetSdkVersion project.target_sdk_version
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        signingConfig signingConfigs.release
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable project.release_debuggable
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/eclipse.inf'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = outputFileName.replace("android", "demo").replace(".apk", "-${variant.versionName}.${variant.versionCode}.apk")
        }
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    dynamicFeatures = [
            ':feature_showimage',
            ':feature_gallery',
            ':feature_transaction'
    ]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(':core')
    api project(':library_commonui')
    api project(':library_common')

    api project(':scrollgalleryview-glideloader')
    api project(':scrollgalleryview')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    api "androidx.constraintlayout:constraintlayout:$android_constraint_layout_version"

    api "com.google.android.play:core:$play_core_version"
    api "com.google.android.material:material:$android_material_version"
    implementation "com.google.android.gms:play-services-base:$google_play_service_base_version"

    // Nested Scroll View
    implementation "com.otaliastudios:nestedscrollcoordinatorlayout:$nestedscrollcoordinatorlayout_version"

    api "com.github.bumptech.glide:glide:$glide_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    api "com.badoo.reaktive:reaktive:$reactive_version"
    api "io.michaelrocks:libphonenumber-android:$lib_phone_number_version"

    implementation "com.faltenreich:skeletonlayout:$skeleton_view_version"

    implementation "com.github.permissions-dispatcher:permissionsdispatcher:$permission_dispatcher_version"
    kapt "com.github.permissions-dispatcher:permissionsdispatcher-processor:$permission_dispatcher_version"

    api "org.jetbrains.kotlinx:kotlinx-serialization-core:$serialization_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // KMP Logger
    implementation "io.github.aakira:napier:$napier_version"

    // Cache
    implementation "com.squareup.sqldelight:android-driver:$sqldelight_version"

    // Dots
    implementation "ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6"

    // Auto Factory
    implementation("com.google.auto.factory:auto-factory:$autofactory_version") {
        exclude group: "com.google.auto.value", module: "auto-value"
    }
    annotationProcessor "com.google.auto.factory:auto-factory:$autofactory_version"
    kapt "com.google.auto.factory:auto-factory:$autofactory_version"

    compileOnly "javax.annotation:jsr250-api:$jsr250_api_version"

    // DI
    api "com.google.dagger:dagger:$dagger_version"
    api("com.google.dagger:dagger-android:$dagger_version") {
        exclude group: "com.android.support"
    }

    api("com.google.dagger:dagger-android-support:$dagger_version") {
        exclude group: "com.android.support"
    }

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "com.google.code.gson:gson:$gson_version"

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation "com.auth0.android:jwtdecode:$auth0_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    implementation 'com.facebook.stetho:stetho:1.5.1'
}

